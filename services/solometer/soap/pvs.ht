<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Solometer Konfiguration</title>
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<meta name="script" http-equiv="Content-Script-Type" content="text/javascript" />
	<meta name="script" http-equiv="Content-Style-Type" content="text/css" />
<!--	<script type="text/javascript">url = document.location.href.replace("pvs.ht", "soap");</script> -->
<!--	<script type="text/javascript" src="scl.js"></script> -->
<script type="text/javascript">

url = document.location.href.replace("pvs.ht", "soap");

// Evaluates the SOAP response
function evalResponse(text)
{
  // Parse the XML document
  if (window.DOMParser) {
    parser=new DOMParser();
    xmlDoc=parser.parseFromString(text,"text/xml");
  } else { // Internet Explorer
    xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
    xmlDoc.async="false";
    xmlDoc.loadXML(text);
  }
  // Check the <soap:Body content
  x=xmlDoc.getElementsByTagName("soap:Body");
  // Possibly several species
  for (i=0;i<x.length;i++) {
    // Get the name of the variable
    aktion = x[i].childNodes[0].nodeName; // GetCalResponse
    // and its value
    y=xmlDoc.getElementsByTagName("s-sex");
    alert("Return:\n\n"+text);
    if(y[0].nodeValue != null)
      wert = y[0].nodeValue; // 0.987
    else
      wert = y[0].childNodes[0].nodeValue; // 0.987
    // Set the appropriate fields in the html
    switch(aktion) {
      case "Fault":
	alert("SOAP server error\n\n" + text);
	break;
      case "SetCalResponse":
      case "SetWebHstNmResponse":
      case "SetUplScrResponse":
	if(wert != 0) {
	  alert("Error setting variable!\n\n" + text);
	} else {
	  alert("Set function ok.");
	}
	break;
      case "GetCalResponse":
	alert("Get function ok.");
	document.SMTCfg.InpPwrCal.value = wert;
	break;
      case "GetWebHstNmResponse":
	alert("Get function ok.");
	document.SMTCfg.InpWebHstNm.value = wert;
	break;
      case "GetUplScrResponse":
	alert("Get function ok.");
	document.SMTCfg.InpUplScr.value = wert;
	break;
      default:
	break;
    }
  }
}

function send_message(message)
{
 var xmlhttp = new XMLHttpRequest();
 xmlhttp.open("POST", url, true);
 xmlhttp.onreadystatechange=function() {
  if (xmlhttp.readyState==4) {
    //alert(xmlhttp.responseText);
    evalResponse(xmlhttp.responseText);
  }
 }
 xmlhttp.setRequestHeader("Accept", "text/xml");
 xmlhttp.setRequestHeader("Accept", "multipart/*");
 xmlhttp.setRequestHeader("Accept", "application/soap");
 xmlhttp.setRequestHeader("SOAPAction", "http://ethersex.de/SOAP#GetCal");

 xmlhttp.send('<?xml version="1.0" encoding="UTF-8"?>'+
  '<soap:Envelope'+
  ' xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"'+ 
  ' xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"'+
  ' xmlns:xsd="http://www.w3.org/2001/XMLSchema"'+
  ' soap:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"'+
  ' xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">'+
  '<soap:Body>'+message+'</soap:Body>'+
  '</soap:Envelope>');
}

function GetCal()
{
  var message = '<GetCal xmlns="http://ethersex.de/SOAP">'+'</GetCal>';
  send_message(message);
}

function SetCal(form)
{
  var setzwert = parseFloat(form.InpPwrCal.value);
  if(setzwert < 0.8 || setzwert > 1.2) {
    alert("Calibration factor has unusual value: " + setzwert);
  }
  var message = '<SetCal xmlns="http://ethersex.de/SOAP">'+
  '<c-gensym3 xsi:type="xsd:string">'+ setzwert + '</c-gensym3></SetCal>';
  send_message(message);
}

function GetUplScr()
{
  var message = '<GetUplScr xmlns="http://ethersex.de/SOAP">'+'</GetUplScr>';
  send_message(message);
}

function SetUplScr(form)
{
  var scriptname = form.InpUplScr.value
  var message = '<SetUplScr xmlns="http://ethersex.de/SOAP">'+
  '<c-gensym3 xsi:type="xsd:string">'+ scriptname + '</c-gensym3></SetUplScr>';
  send_message(message);
}

function GetWebHstNm()
{
  var message = '<GetWebHstNm xmlns="http://ethersex.de/SOAP">'+'</GetWebHstNm>';
  send_message(message);
}

function SetWebHstNm(form)
{
  var scriptname = form.InpWebHstNm.value
  var message = '<SetWebHstNm xmlns="http://ethersex.de/SOAP">'+
  '<c-gensym3 xsi:type="xsd:string">'+ scriptname + '</c-gensym3></SetWebHstNm>';
  send_message(message);
}

function GetCookie()
{
  var message = '<GetCookie xmlns="http://ethersex.de/SOAP">'+'</GetCookie>';
  send_message(message);
}

function SetCookie(form)
{
  var scriptname = form.InpCookie.value
  var message = '<SetCookie xmlns="http://ethersex.de/SOAP">'+
  '<c-gensym3 xsi:type="xsd:string">'+ scriptname + '</c-gensym3></SetCookie>';
  send_message(message);
}
</script>
</head>
<body>
<div>
  <h1><span id="lblTitle">Solometer Konfiguration</span></h1>
  <form id="SMTCfg" name="SMTCfg" action="#" method="post">
    <hr />

    <h2>Leistungs-Kalibrationsfaktor</h2>
    <p></p> 
    <label for="txtPwrCal">Kalibrationsfaktor: </label>
    <input type="text" name="InpPwrCal" id="PwrCal" value="" /><BR>
    <input type="button" value="Holen" onclick="GetCal();" />
    <input type="button" value="Setzen" onclick="SetCal(this.form);" />
		
    <hr />

    <h2>Hostname des Webhosts</h2>
    <p></p> 
    <label for="txtWebHost">Webhost Name: </label>
    <input type="text" name="InpWebHstNm" id="InpWebHstNm" value="" /><BR>
    <input type="button" value="Holen" onclick="GetWebHstNm();" />
    <input type="button" value="Setzen" onclick="SetWebHstNm(this.form);" />
		
    <hr />

    <h2>Solometer Kennung</h2>
    <p></p> 
    <label for="txtCookie">Kennung: </label>
    <input type="text" name="InpCookie" id="InpCookie" value="" /><BR>
    <input type="button" value="Holen" onclick="GetCookie();" />
    <input type="button" value="Setzen" onclick="SetCookie(this.form);" />

    <hr />

    <h2>Name des upload-scripts</h2>
    <p></p> 
    <label for="txtUploadScript">Upload Skript: </label>
    <input type="text" name="InpUplScr" id="InpUplScr" value="" /><BR>
    <input type="button" value="Holen" onclick="GetUplScr();" />
    <input type="button" value="Setzen" onclick="SetUplScr(this.form);" />

<!--    <h2>Test <input type="text" name="Ergebnisfeld"></h2>
    <p></p> 
    <label for="txtTestItAll">String: </label>
    <input type="text" name="InpTestItAll" id="InpTestItAll" value="" />
    <input type="button" value="Abschicken" onclick="TestItAll(this.form);" />
-->	
  </form>
</div>
</body>
</html>